{"version":3,"sources":["../node_modules/@material-ui/core/esm/FormControl/useFormControl.js","../node_modules/@material-ui/core/esm/internal/svg-icons/createSvgIcon.js","../node_modules/@material-ui/core/esm/InputBase/utils.js","../node_modules/@material-ui/core/esm/FormControl/FormControlContext.js","../node_modules/@material-ui/core/esm/Card/Card.js","../node_modules/@material-ui/core/esm/CardContent/CardContent.js","../node_modules/@material-ui/core/esm/FormControl/FormControl.js","../node_modules/@material-ui/core/esm/FormGroup/FormGroup.js","../node_modules/@material-ui/core/esm/FormControlLabel/FormControlLabel.js","../node_modules/@material-ui/core/esm/internal/SwitchBase.js","../node_modules/@material-ui/core/esm/internal/svg-icons/CheckBoxOutlineBlank.js","../node_modules/@material-ui/core/esm/internal/svg-icons/CheckBox.js","../node_modules/@material-ui/core/esm/internal/svg-icons/IndeterminateCheckBox.js","../node_modules/@material-ui/core/esm/Checkbox/Checkbox.js"],"names":["useFormControl","React","useContext","FormControlContext","createSvgIcon","path","displayName","Component","memo","forwardRef","props","ref","createElement","SvgIcon","_extends","muiName","hasValue","value","Array","isArray","length","isFilled","obj","SSR","arguments","undefined","defaultValue","isAdornedStart","startAdornment","createContext","Card","classes","className","_props$raised","raised","other","_objectWithoutProperties","Paper","clsx","root","elevation","withStyles","overflow","name","CardContent","_props$component","component","padding","paddingBottom","FormControl","children","_props$color","color","_props$disabled","disabled","_props$error","error","_props$fullWidth","fullWidth","_props$hiddenLabel","hiddenLabel","_props$margin","margin","_props$required","required","size","_props$variant","variant","_React$useState","useState","initialAdornedStart","Children","forEach","child","isMuiElement","input","adornedStart","setAdornedStart","_React$useState2","initialFilled","filled","setFilled","_React$useState3","focused","setFocused","onFilled","useCallback","childContext","onBlur","onEmpty","onFocus","registerEffect","Provider","concat","capitalize","display","flexDirection","position","minWidth","border","zIndex","verticalAlign","marginNormal","marginTop","marginBottom","marginDense","width","FormGroup","_props$row","row","flexWrap","FormControlLabel","checked","control","disabledProp","label","inputRef","_props$labelPlacement","labelPlacement","onChange","muiFormControl","controlProps","key","cloneElement","Typography","theme","alignItems","cursor","WebkitTapHighlightColor","marginLeft","marginRight","labelPlacementStart","labelPlacementTop","labelPlacementBottom","palette","text","SwitchBase","autoFocus","checkedProp","checkedIcon","defaultChecked","icon","id","inputProps","readOnly","tabIndex","type","_useControlled","useControlled","controlled","default","Boolean","_useControlled2","_slicedToArray","setCheckedState","hasLabelFor","IconButton","role","event","newChecked","target","opacity","height","top","left","d","defaultCheckedIcon","CheckBoxIcon","defaultIcon","CheckBoxOutlineBlankIcon","defaultIndeterminateIcon","IndeterminateCheckBoxIcon","Checkbox","_props$checkedIcon","_props$icon","_props$indeterminate","indeterminate","_props$indeterminateI","indeterminateIcon","_props$size","fontSize","secondary","colorPrimary","primary","main","backgroundColor","fade","action","hoverOpacity","colorSecondary"],"mappings":"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","file":"static/js/0.107fb7c4.chunk.js","sourcesContent":["import React from 'react';\nimport FormControlContext from './FormControlContext';\nexport default function useFormControl() {\n  return React.useContext(FormControlContext);\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport SvgIcon from '../../SvgIcon';\nexport default function createSvgIcon(path, displayName) {\n  var Component = React.memo(React.forwardRef(function (props, ref) {\n    return React.createElement(SvgIcon, _extends({}, props, {\n      ref: ref\n    }), path);\n  }));\n\n  if (process.env.NODE_ENV !== 'production') {\n    Component.displayName = \"\".concat(displayName, \"Icon\");\n  }\n\n  Component.muiName = SvgIcon.muiName;\n  return Component;\n}","// Supports determination of isControlled().\n// Controlled input accepts its current value as a prop.\n//\n// @see https://facebook.github.io/react/docs/forms.html#controlled-components\n// @param value\n// @returns {boolean} true if string (including '') or number (including zero)\nexport function hasValue(value) {\n  return value != null && !(Array.isArray(value) && value.length === 0);\n} // Determine if field is empty or filled.\n// Response determines if label is presented above field or as placeholder.\n//\n// @param obj\n// @param SSR\n// @returns {boolean} False when not present or empty string.\n//                    True when any number or string with length.\n\nexport function isFilled(obj) {\n  var SSR = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  return obj && (hasValue(obj.value) && obj.value !== '' || SSR && hasValue(obj.defaultValue) && obj.defaultValue !== '');\n} // Determine if an Input is adorned on start.\n// It's corresponding to the left with LTR.\n//\n// @param obj\n// @returns {boolean} False when no adornments.\n//                    True when adorned at the start.\n\nexport function isAdornedStart(obj) {\n  return obj.startAdornment;\n}","import React from 'react';\n/**\n * @ignore - internal component.\n */\n\nvar FormControlContext = React.createContext();\n\nif (process.env.NODE_ENV !== 'production') {\n  FormControlContext.displayName = 'FormControlContext';\n}\n\nexport function useFormControl() {\n  return React.useContext(FormControlContext);\n}\nexport default FormControlContext;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Paper from '../Paper';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    overflow: 'hidden'\n  }\n};\nvar Card = React.forwardRef(function Card(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$raised = props.raised,\n      raised = _props$raised === void 0 ? false : _props$raised,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"raised\"]);\n\n  return React.createElement(Paper, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : 1,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes = {\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the card will use raised styling.\n   */\n  raised: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCard'\n})(Card);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  }\n};\nvar CardContent = React.forwardRef(function CardContent(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes = {\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardContent'\n})(CardContent);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { isFilled, isAdornedStart } from '../InputBase/utils';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nimport isMuiElement from '../utils/isMuiElement';\nimport FormControlContext from './FormControlContext';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'inline-flex',\n    flexDirection: 'column',\n    position: 'relative',\n    // Reset fieldset default style.\n    minWidth: 0,\n    padding: 0,\n    margin: 0,\n    border: 0,\n    zIndex: 0,\n    // Fix blur label text issue\n    verticalAlign: 'top' // Fix alignment issue on Safari.\n\n  },\n\n  /* Styles applied to the root element if `margin=\"normal\"`. */\n  marginNormal: {\n    marginTop: 16,\n    marginBottom: 8\n  },\n\n  /* Styles applied to the root element if `margin=\"dense\"`. */\n  marginDense: {\n    marginTop: 8,\n    marginBottom: 4\n  },\n\n  /* Styles applied to the root element if `fullWidth={true}`. */\n  fullWidth: {\n    width: '100%'\n  }\n};\n/**\n * Provides context such as filled/focused/error/required for form inputs.\n * Relying on the context provides high flexibility and ensures that the state always stays\n * consistent across the children of the `FormControl`.\n * This context is used by the following components:\n *\n *  - FormLabel\n *  - FormHelperText\n *  - Input\n *  - InputLabel\n *\n * You can find one composition example below and more going to [the demos](/components/text-fields/#components).\n *\n * ```jsx\n * <FormControl>\n *   <InputLabel htmlFor=\"my-input\">Email address</InputLabel>\n *   <Input id=\"my-input\" aria-describedby=\"my-helper-text\" />\n *   <FormHelperText id=\"my-helper-text\">We'll never share your email.</FormHelperText>\n * </FormControl>\n * ```\n *\n * ⚠️Only one input can be used within a FormControl.\n */\n\nvar FormControl = React.forwardRef(function FormControl(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'primary' : _props$color,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$error = props.error,\n      error = _props$error === void 0 ? false : _props$error,\n      _props$fullWidth = props.fullWidth,\n      fullWidth = _props$fullWidth === void 0 ? false : _props$fullWidth,\n      _props$hiddenLabel = props.hiddenLabel,\n      hiddenLabel = _props$hiddenLabel === void 0 ? false : _props$hiddenLabel,\n      _props$margin = props.margin,\n      margin = _props$margin === void 0 ? 'none' : _props$margin,\n      _props$required = props.required,\n      required = _props$required === void 0 ? false : _props$required,\n      size = props.size,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'standard' : _props$variant,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"color\", \"component\", \"disabled\", \"error\", \"fullWidth\", \"hiddenLabel\", \"margin\", \"required\", \"size\", \"variant\"]);\n\n  var _React$useState = React.useState(function () {\n    // We need to iterate through the children and find the Input in order\n    // to fully support server-side rendering.\n    var initialAdornedStart = false;\n\n    if (children) {\n      React.Children.forEach(children, function (child) {\n        if (!isMuiElement(child, ['Input', 'Select'])) {\n          return;\n        }\n\n        var input = isMuiElement(child, ['Select']) ? child.props.input : child;\n\n        if (input && isAdornedStart(input.props)) {\n          initialAdornedStart = true;\n        }\n      });\n    }\n\n    return initialAdornedStart;\n  }),\n      adornedStart = _React$useState[0],\n      setAdornedStart = _React$useState[1];\n\n  var _React$useState2 = React.useState(function () {\n    // We need to iterate through the children and find the Input in order\n    // to fully support server-side rendering.\n    var initialFilled = false;\n\n    if (children) {\n      React.Children.forEach(children, function (child) {\n        if (!isMuiElement(child, ['Input', 'Select'])) {\n          return;\n        }\n\n        if (isFilled(child.props, true)) {\n          initialFilled = true;\n        }\n      });\n    }\n\n    return initialFilled;\n  }),\n      filled = _React$useState2[0],\n      setFilled = _React$useState2[1];\n\n  var _React$useState3 = React.useState(false),\n      focused = _React$useState3[0],\n      setFocused = _React$useState3[1];\n\n  if (disabled && focused) {\n    setFocused(false);\n  }\n\n  var registerEffect;\n\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    var registeredInput = React.useRef(false);\n\n    registerEffect = function registerEffect() {\n      if (registeredInput.current) {\n        console.error(['Material-UI: there are multiple InputBase components inside a FormControl.', 'This is not supported. It might cause infinite rendering loops.', 'Only use one InputBase.'].join('\\n'));\n      }\n\n      registeredInput.current = true;\n      return function () {\n        registeredInput.current = false;\n      };\n    };\n  }\n\n  var onFilled = React.useCallback(function () {\n    setFilled(true);\n  }, []);\n  var onEmpty = React.useCallback(function () {\n    setFilled(false);\n  }, []);\n  var childContext = {\n    adornedStart: adornedStart,\n    setAdornedStart: setAdornedStart,\n    color: color,\n    disabled: disabled,\n    error: error,\n    filled: filled,\n    focused: focused,\n    fullWidth: fullWidth,\n    hiddenLabel: hiddenLabel,\n    margin: (size === 'small' ? 'dense' : undefined) || margin,\n    onBlur: function onBlur() {\n      setFocused(false);\n    },\n    onEmpty: onEmpty,\n    onFilled: onFilled,\n    onFocus: function onFocus() {\n      setFocused(true);\n    },\n    registerEffect: registerEffect,\n    required: required,\n    variant: variant\n  };\n  return React.createElement(FormControlContext.Provider, {\n    value: childContext\n  }, React.createElement(Component, _extends({\n    className: clsx(classes.root, className, margin !== 'none' && classes[\"margin\".concat(capitalize(margin))], fullWidth && classes.fullWidth),\n    ref: ref\n  }, other), children));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormControl.propTypes = {\n  /**\n   * The contents of the form control.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['primary', 'secondary']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the label, input and helper text should be displayed in a disabled state.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the label should be displayed in an error state.\n   */\n  error: PropTypes.bool,\n\n  /**\n   * If `true`, the component will take up the full width of its container.\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * If `true`, the label will be hidden.\n   * This is used to increase density for a `FilledInput`.\n   * Be sure to add `aria-label` to the `input` element.\n   */\n  hiddenLabel: PropTypes.bool,\n\n  /**\n   * If `dense` or `normal`, will adjust vertical spacing of this and contained components.\n   */\n  margin: PropTypes.oneOf(['none', 'dense', 'normal']),\n\n  /**\n   * If `true`, the label will indicate that the input is required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the text field.\n   */\n  size: PropTypes.oneOf(['small', 'medium']),\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['standard', 'outlined', 'filled'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiFormControl'\n})(FormControl);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    flexWrap: 'wrap'\n  },\n\n  /* Styles applied to the root element if `row={true}`. */\n  row: {\n    flexDirection: 'row'\n  }\n};\n/**\n * `FormGroup` wraps controls such as `Checkbox` and `Switch`.\n * It provides compact row layout.\n * For the `Radio`, you should be using the `RadioGroup` component instead of this one.\n */\n\nvar FormGroup = React.forwardRef(function FormGroup(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$row = props.row,\n      row = _props$row === void 0 ? false : _props$row,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"row\"]);\n\n  return React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, row && classes.row),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormGroup.propTypes = {\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Display group of elements in a compact row.\n   */\n  row: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiFormGroup'\n})(FormGroup);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport { useFormControl } from '../FormControl';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'inline-flex',\n      alignItems: 'center',\n      cursor: 'pointer',\n      // For correct alignment with the text.\n      verticalAlign: 'middle',\n      WebkitTapHighlightColor: 'transparent',\n      marginLeft: -11,\n      marginRight: 16,\n      // used for row presentation of radio/checkbox\n      '&$disabled': {\n        cursor: 'default'\n      }\n    },\n\n    /* Styles applied to the root element if `labelPlacement=\"start\"`. */\n    labelPlacementStart: {\n      flexDirection: 'row-reverse',\n      marginLeft: 16,\n      // used for row presentation of radio/checkbox\n      marginRight: -11\n    },\n\n    /* Styles applied to the root element if `labelPlacement=\"top\"`. */\n    labelPlacementTop: {\n      flexDirection: 'column-reverse',\n      marginLeft: 16\n    },\n\n    /* Styles applied to the root element if `labelPlacement=\"bottom\"`. */\n    labelPlacementBottom: {\n      flexDirection: 'column',\n      marginLeft: 16\n    },\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the label's Typography component. */\n    label: {\n      '&$disabled': {\n        color: theme.palette.text.disabled\n      }\n    }\n  };\n};\n/**\n * Drop in replacement of the `Radio`, `Switch` and `Checkbox` component.\n * Use this component if you want to display an extra label.\n */\n\nvar FormControlLabel = React.forwardRef(function FormControlLabel(props, ref) {\n  var checked = props.checked,\n      classes = props.classes,\n      className = props.className,\n      control = props.control,\n      disabledProp = props.disabled,\n      inputRef = props.inputRef,\n      label = props.label,\n      _props$labelPlacement = props.labelPlacement,\n      labelPlacement = _props$labelPlacement === void 0 ? 'end' : _props$labelPlacement,\n      name = props.name,\n      onChange = props.onChange,\n      value = props.value,\n      other = _objectWithoutProperties(props, [\"checked\", \"classes\", \"className\", \"control\", \"disabled\", \"inputRef\", \"label\", \"labelPlacement\", \"name\", \"onChange\", \"value\"]);\n\n  var muiFormControl = useFormControl();\n  var disabled = disabledProp;\n\n  if (typeof disabled === 'undefined' && typeof control.props.disabled !== 'undefined') {\n    disabled = control.props.disabled;\n  }\n\n  if (typeof disabled === 'undefined' && muiFormControl) {\n    disabled = muiFormControl.disabled;\n  }\n\n  var controlProps = {\n    disabled: disabled\n  };\n  ['checked', 'name', 'onChange', 'value', 'inputRef'].forEach(function (key) {\n    if (typeof control.props[key] === 'undefined' && typeof props[key] !== 'undefined') {\n      controlProps[key] = props[key];\n    }\n  });\n  return React.createElement(\"label\", _extends({\n    className: clsx(classes.root, className, labelPlacement !== 'end' && classes[\"labelPlacement\".concat(capitalize(labelPlacement))], disabled && classes.disabled),\n    ref: ref\n  }, other), React.cloneElement(control, controlProps), React.createElement(Typography, {\n    component: \"span\",\n    className: clsx(classes.label, disabled && classes.disabled)\n  }, label));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormControlLabel.propTypes = {\n  /**\n   * If `true`, the component appears selected.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * A control element. For instance, it can be be a `Radio`, a `Switch` or a `Checkbox`.\n   */\n  control: PropTypes.element,\n\n  /**\n   * If `true`, the control will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * The text to be used in an enclosing label element.\n   */\n  label: PropTypes.node,\n\n  /**\n   * The position of the label.\n   */\n  labelPlacement: PropTypes.oneOf(['end', 'start', 'top', 'bottom']),\n\n  /*\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiFormControlLabel'\n})(FormControlLabel);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport useControlled from '../utils/useControlled';\nimport useFormControl from '../FormControl/useFormControl';\nimport withStyles from '../styles/withStyles';\nimport IconButton from '../IconButton';\nexport var styles = {\n  root: {\n    padding: 9\n  },\n  checked: {},\n  disabled: {},\n  input: {\n    cursor: 'inherit',\n    position: 'absolute',\n    opacity: 0,\n    width: '100%',\n    height: '100%',\n    top: 0,\n    left: 0,\n    margin: 0,\n    padding: 0,\n    zIndex: 1\n  }\n};\n/**\n * @ignore - internal component.\n */\n\nvar SwitchBase = React.forwardRef(function SwitchBase(props, ref) {\n  var autoFocus = props.autoFocus,\n      checkedProp = props.checked,\n      checkedIcon = props.checkedIcon,\n      classes = props.classes,\n      className = props.className,\n      defaultChecked = props.defaultChecked,\n      disabledProp = props.disabled,\n      icon = props.icon,\n      id = props.id,\n      inputProps = props.inputProps,\n      inputRef = props.inputRef,\n      name = props.name,\n      onBlur = props.onBlur,\n      onChange = props.onChange,\n      onFocus = props.onFocus,\n      readOnly = props.readOnly,\n      required = props.required,\n      tabIndex = props.tabIndex,\n      type = props.type,\n      value = props.value,\n      other = _objectWithoutProperties(props, [\"autoFocus\", \"checked\", \"checkedIcon\", \"classes\", \"className\", \"defaultChecked\", \"disabled\", \"icon\", \"id\", \"inputProps\", \"inputRef\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"readOnly\", \"required\", \"tabIndex\", \"type\", \"value\"]);\n\n  var _useControlled = useControlled({\n    controlled: checkedProp,\n    default: Boolean(defaultChecked),\n    name: 'SwitchBase'\n  }),\n      _useControlled2 = _slicedToArray(_useControlled, 2),\n      checked = _useControlled2[0],\n      setCheckedState = _useControlled2[1];\n\n  var muiFormControl = useFormControl();\n\n  var handleFocus = function handleFocus(event) {\n    if (onFocus) {\n      onFocus(event);\n    }\n\n    if (muiFormControl && muiFormControl.onFocus) {\n      muiFormControl.onFocus(event);\n    }\n  };\n\n  var handleBlur = function handleBlur(event) {\n    if (onBlur) {\n      onBlur(event);\n    }\n\n    if (muiFormControl && muiFormControl.onBlur) {\n      muiFormControl.onBlur(event);\n    }\n  };\n\n  var handleInputChange = function handleInputChange(event) {\n    var newChecked = event.target.checked;\n    setCheckedState(newChecked);\n\n    if (onChange) {\n      onChange(event, newChecked);\n    }\n  };\n\n  var disabled = disabledProp;\n\n  if (muiFormControl) {\n    if (typeof disabled === 'undefined') {\n      disabled = muiFormControl.disabled;\n    }\n  }\n\n  var hasLabelFor = type === 'checkbox' || type === 'radio';\n  return React.createElement(IconButton, _extends({\n    component: \"span\",\n    className: clsx(classes.root, className, checked && classes.checked, disabled && classes.disabled),\n    disabled: disabled,\n    tabIndex: null,\n    role: undefined,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    ref: ref\n  }, other), React.createElement(\"input\", _extends({\n    autoFocus: autoFocus,\n    checked: checkedProp,\n    defaultChecked: defaultChecked,\n    className: classes.input,\n    disabled: disabled,\n    id: hasLabelFor && id,\n    name: name,\n    onChange: handleInputChange,\n    readOnly: readOnly,\n    ref: inputRef,\n    required: required,\n    tabIndex: tabIndex,\n    type: type,\n    value: value\n  }, inputProps)), checked ? checkedIcon : icon);\n}); // NB: If changed, please update Checkbox, Switch and Radio\n// so that the API documentation is updated.\n\nprocess.env.NODE_ENV !== \"production\" ? SwitchBase.propTypes = {\n  /**\n   * If `true`, the `input` element will be focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the switch will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node.isRequired,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /*\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string.isRequired,\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateSwitchBase'\n})(SwitchBase);","import React from 'react';\nimport createSvgIcon from './createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');","import React from 'react';\nimport createSvgIcon from './createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","import React from 'react';\nimport createSvgIcon from './createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z\"\n}), 'IndeterminateCheckBox');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport SwitchBase from '../internal/SwitchBase';\nimport CheckBoxOutlineBlankIcon from '../internal/svg-icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '../internal/svg-icons/CheckBox';\nimport { fade } from '../styles/colorManipulator';\nimport IndeterminateCheckBoxIcon from '../internal/svg-icons/IndeterminateCheckBox';\nimport capitalize from '../utils/capitalize';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Pseudo-class applied to the root element if `checked={true}`. */\n    checked: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Pseudo-class applied to the root element if `indeterminate={true}`. */\n    indeterminate: {},\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      '&$checked': {\n        color: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      '&$checked': {\n        color: theme.palette.secondary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    }\n  };\n};\nvar defaultCheckedIcon = React.createElement(CheckBoxIcon, null);\nvar defaultIcon = React.createElement(CheckBoxOutlineBlankIcon, null);\nvar defaultIndeterminateIcon = React.createElement(IndeterminateCheckBoxIcon, null);\nvar Checkbox = React.forwardRef(function Checkbox(props, ref) {\n  var _props$checkedIcon = props.checkedIcon,\n      checkedIcon = _props$checkedIcon === void 0 ? defaultCheckedIcon : _props$checkedIcon,\n      classes = props.classes,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'secondary' : _props$color,\n      _props$icon = props.icon,\n      icon = _props$icon === void 0 ? defaultIcon : _props$icon,\n      _props$indeterminate = props.indeterminate,\n      indeterminate = _props$indeterminate === void 0 ? false : _props$indeterminate,\n      _props$indeterminateI = props.indeterminateIcon,\n      indeterminateIcon = _props$indeterminateI === void 0 ? defaultIndeterminateIcon : _props$indeterminateI,\n      inputProps = props.inputProps,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      other = _objectWithoutProperties(props, [\"checkedIcon\", \"classes\", \"color\", \"icon\", \"indeterminate\", \"indeterminateIcon\", \"inputProps\", \"size\"]);\n\n  return React.createElement(SwitchBase, _extends({\n    type: \"checkbox\",\n    classes: {\n      root: clsx(classes.root, classes[\"color\".concat(capitalize(color))], indeterminate && classes.indeterminate),\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    color: color,\n    inputProps: _extends({\n      'data-indeterminate': indeterminate\n    }, inputProps),\n    icon: React.cloneElement(indeterminate ? indeterminateIcon : icon, {\n      fontSize: size === 'small' ? 'small' : 'default'\n    }),\n    checkedIcon: React.cloneElement(indeterminate ? indeterminateIcon : checkedIcon, {\n      fontSize: size === 'small' ? 'small' : 'default'\n    }),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes = {\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['primary', 'secondary', 'default']),\n\n  /**\n   * If `true`, the checkbox will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the input.\n   */\n  indeterminate: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is indeterminate.\n   */\n  indeterminateIcon: PropTypes.node,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the checkbox.\n   * `small` is equivalent to the dense checkbox styling.\n   */\n  size: PropTypes.oneOf(['small', 'medium']),\n\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string,\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCheckbox'\n})(Checkbox);"],"sourceRoot":""}